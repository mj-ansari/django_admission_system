# Generated by Django 5.0.2 on 2024-02-26 03:19

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('course_name', models.CharField(max_length=50)),
                ('duration', models.IntegerField()),
                ('percent_criteria', models.FloatField(default=50.0)),
                ('fee', models.IntegerField()),
                ('seats', models.PositiveSmallIntegerField()),
                ('description', models.TextField()),
                ('slug', models.SlugField()),
                ('image', models.ImageField(upload_to='Course/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('state_name', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('city_name', models.CharField(max_length=30)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.state')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=13)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=15)),
                ('aadhar_no', models.CharField(max_length=12, unique=True)),
                ('birth_date', models.DateField()),
                ('address', models.TextField()),
                ('pin', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999)])),
                ('religion', models.CharField(choices=[('HINDU', 'HINDU'), ('MUSLIM', 'MUSLIM'), ('CHRISTIAN', 'CHRISTIAN'), ('JAIN', 'JAIN'), ('SPIRITUAL', 'SPIRITUAL'), ('OTHER', 'OTHER')], max_length=15)),
                ('category', models.CharField(choices=[('SC', 'SC'), ('ST', 'ST'), ('OBC', 'OBC'), ('GENERAL', 'GENERAL'), ('OTHER', 'OTHER')], max_length=10)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.city')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.state')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('school_name', models.CharField(max_length=255)),
                ('stream', models.CharField(choices=[('Science', 'Science'), ('Commerce', 'Commerce'), ('Arts', 'Arts'), ('Diploma', 'Diploma')], max_length=15)),
                ('percentage_10th', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('percentage_12th', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('college_name', models.CharField(blank=True, max_length=255, null=True)),
                ('college_cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='admission.student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('student_image', models.ImageField(upload_to='Student/image')),
                ('aadhar_image', models.ImageField(upload_to='Student/aadhar')),
                ('marksheet_10th', models.ImageField(upload_to='Student/10th')),
                ('marksheet_12th', models.ImageField(upload_to='Student/12th')),
                ('marksheet_clg', models.ImageField(blank=True, null=True, upload_to='Student/college')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='document', to='admission.student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Active', 'Active'), ('Disable', 'Disable')], default=('Disable', 'Disable'), max_length=10)),
                ('course', models.OneToOneField(default='Course Deleted', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='course', to='admission.course')),
                ('student', models.OneToOneField(default='Student Deleted', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='admission', to='admission.student')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
